{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9dc8c49e_b00768bf",
        "filename": "include/filters.h",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-08T10:02:31Z",
      "side": 1,
      "message": "minor: this is not true since in a case like this: rbh-find \"...\" -expired -name toto\n\nYou pass \"-name\" and the function is not supposed to fail in your implementation.",
      "range": {
        "startLine": 52,
        "startChar": 45,
        "endLine": 52,
        "endChar": 53
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45fd1cb1_5c8881c3",
        "filename": "include/filters.h",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "Changed it to simply state that expired is the next argument in the command line or NULL, which makes more sense with the description of the idx parameter",
      "parentUuid": "9dc8c49e_b00768bf",
      "range": {
        "startLine": 52,
        "startChar": 45,
        "endLine": 52,
        "endChar": 53
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4e4da13_34012e55",
        "filename": "include/filters.h",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-25T13:20:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "45fd1cb1_5c8881c3",
      "range": {
        "startLine": 52,
        "startChar": 45,
        "endLine": 52,
        "endChar": 53
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cd11813_fadb6877",
        "filename": "include/parser.h",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-08T10:02:31Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 33,
        "startChar": 56,
        "endLine": 33,
        "endChar": 60
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aabc2c3f_62fa6d00",
        "filename": "include/parser.h",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cd11813_fadb6877",
      "range": {
        "startLine": 33,
        "startChar": 56,
        "endLine": 33,
        "endChar": 60
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a121f1ca_5f22bc17",
        "filename": "include/parser.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-08T10:02:31Z",
      "side": 1,
      "message": "suggest: true if the predicate requires and argument\n\nquestion: it is unclear to me what this boolean reprensents. I see 3 possible options: 1 argument, no arguments or an optional argument. I suppose that false means no argument but what does true mean?",
      "range": {
        "startLine": 33,
        "startChar": 26,
        "endLine": 34,
        "endChar": 49
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a0502f8_61bd9932",
        "filename": "include/parser.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "true mean the predicate requires exactly one argument, false means it may take in an argument or none at all. `expired` may use an argument but may also not, while fid/hsm_state/ost_index absolutely require an argument.",
      "parentUuid": "a121f1ca_5f22bc17",
      "range": {
        "startLine": 33,
        "startChar": 26,
        "endLine": 34,
        "endChar": 49
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a83f67b3_01fca2f2",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-08T08:12:18Z",
      "side": 1,
      "message": "question: even if they are not used yet, is it interesting to define the fields for expired and expired_rel? or do you want to wait for their implementation to be done?",
      "range": {
        "startLine": 25,
        "startChar": 37,
        "endLine": 25,
        "endChar": 59
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a382867_a488449f",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "Expired is not supposed to be here because it does not relate to any filter_field.\nExpired_rel I cannot add here because it would be const and fieldA/fieldB in rbh_filter_field are not.",
      "parentUuid": "a83f67b3_01fca2f2",
      "range": {
        "startLine": 25,
        "startChar": 37,
        "endLine": 25,
        "endChar": 59
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e4bf7b5_054b47d5",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-10T14:44:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8a382867_a488449f",
      "range": {
        "startLine": 25,
        "startChar": 37,
        "endLine": 25,
        "endChar": 59
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5281551_ce84bed4",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-08T10:02:31Z",
      "side": 1,
      "message": "minor: I don\u0027t know what the appropriate size should be here since time_t seems to be a signed 32 bits integer 12 is enough.",
      "range": {
        "startLine": 202,
        "startChar": 15,
        "endLine": 202,
        "endChar": 17
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94c25ae9_fa878cab",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "Went another way, easier to manage, no risk of overflow.",
      "parentUuid": "d5281551_ce84bed4",
      "range": {
        "startLine": 202,
        "startChar": 15,
        "endLine": 202,
        "endChar": 17
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "721f8444_9ee754cb",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-08T10:02:31Z",
      "side": 1,
      "message": "question: I\u0027m not sure about your third condition c !\u003d \u0027-\u0027 \u0026\u0026 c !\u003d \u0027+\u0027 \u0026\u0026 !isdigit(c). What kind of CLI argument would be valid other than something that start with \u0027-\u0027 or an epoch after \u0027-expired\u0027?",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 7
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dd4c35d_ec2670ac",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-08T11:31:11Z",
      "side": 1,
      "message": "I think this is to avoid declare a failure if there is no argument to `-expired` but still having another option, such as `-name`?",
      "parentUuid": "721f8444_9ee754cb",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 7
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d63a158e_58363de0",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-08T11:44:00Z",
      "side": 1,
      "message": "I\u0027ll explain what I thought : the condition is `a || (b || c)`, `a` checks if `-expired` is the last part of the command line, and if so, we use the current time. `b` checks if the following argument of the line is `-something` or `+something`, in which case it is not a valid number and we use the current epoch (and we don\u0027t skip the next argument of the line, so it\u0027ll be interpreted as it should). `c` checks that the argument does not start with a `-`, `+` or a number, in which case we use the current epoch, and consider this argument is a \"normal\" value to check later on.\n\nSo `rbh-lfind -expired`, `rbh-lfind -expired -name toto`, `rbh-lfind -expired blob` are all interpreted \"properly\", as in we use the current epoch as argument to `-expired` (and the command will fail with the third one).",
      "parentUuid": "2dd4c35d_ec2670ac",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 7
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbd314d8_9f9cad5c",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-11-21T13:04:33Z",
      "side": 1,
      "message": "Just my opinon: I\u0027m not aware of any option to the regular find that does optional arguments; while I think \"-[non-digit]\u0027 is probably as good as we\u0027ll get I do not see why no argument is so much better than having the operator write \u0027-0\u0027, or if that is too hard to remember add a separate no-argument option for it?\n\nIf these conditions generate this many arguments right now I think it\u0027ll be very hard to maintain in the long term, and we\u0027ll be better off with a simpler alternative.",
      "parentUuid": "d63a158e_58363de0",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 7
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dad6694_33fc588a",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-25T13:20:48Z",
      "side": 1,
      "message": "After discussing it again, we will go with two separate predicates, \"expired-at\" which takes an argument, and \"expired\" which takes no arguments but behaves like\"expired-at -$(date +%s)\".\n\nWill be done in another patch though.",
      "parentUuid": "fbd314d8_9f9cad5c",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 7
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9dd39c5_aa337bcc",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-08T10:02:31Z",
      "side": 1,
      "message": "suggest: I think c ! \u0027-\u0027 \u0026\u0026 c !\u003d \u0027+\u0027 \u0026\u0026 !isdigit(c) is equivalent to !isdigit(c)",
      "range": {
        "startLine": 207,
        "startChar": 51,
        "endLine": 207,
        "endChar": 71
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcb25435_4a847da1",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-08T11:31:11Z",
      "side": 1,
      "message": "It will catch `+12345` no?",
      "parentUuid": "c9dd39c5_aa337bcc",
      "range": {
        "startLine": 207,
        "startChar": 51,
        "endLine": 207,
        "endChar": 71
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1509e60d_1274bb66",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-08T11:44:00Z",
      "side": 1,
      "message": "Yes, +12345 and -12345 are still valid comparison values, which would not be caught if we use `!isdigit(c)`",
      "parentUuid": "bcb25435_4a847da1",
      "range": {
        "startLine": 207,
        "startChar": 51,
        "endLine": 207,
        "endChar": 71
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "066bcccd_fe0fe612",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-25T13:20:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1509e60d_1274bb66",
      "range": {
        "startLine": 207,
        "startChar": 51,
        "endLine": 207,
        "endChar": 71
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfcae6b7_72a7dc75",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-08T10:02:31Z",
      "side": 1,
      "message": "defect: this should be sizeof(epoch) not expired otherwise a buffer overflow is possible. You should check how many bits where written to epoch and return an error in case strlen(expired) \u003e sizeof(epoch).\n\nAlso, I don\u0027t know if 12 is enough for the size. The man page seems to indicate that using a time_t leads to undefiened behavior if sizeof(time_t) \u003d\u003d 4 after 2038. I guess we should have an assertion at compile time for the size of time_t so that we know it\u0027s size. Not sure how to handle this best. How is it done for other timestamps such as atime for example?",
      "range": {
        "startLine": 211,
        "startChar": 7,
        "endLine": 211,
        "endChar": 15
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e93af350_be263f98",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "For other timestamps, nothing is done because they require an argument, so there is no need to bother with having the current time in case none is provided.\n\nWent another way, using asprintf, so that I\u0027m sure there\u0027s no overflow and we don\u0027t have to bother with the length.",
      "parentUuid": "cfcae6b7_72a7dc75",
      "range": {
        "startLine": 211,
        "startChar": 7,
        "endLine": 211,
        "endChar": 15
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64a029f7_813cb751",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-08T08:12:18Z",
      "side": 1,
      "message": "question: I don\u0027t remember well here, is this the expected behavior? maybe check for two is sufficient enough?",
      "range": {
        "startLine": 246,
        "startChar": 11,
        "endLine": 248,
        "endChar": 39
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ead3958f_f97bd1ed",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "The expected behaviour is `the file expired according to the absolute epoch given compared to the xattrs set, or the file expired according to the max between atime, ctime and mtime, plus the relative time attached to the file (the xattrs) compared to the given time`. Since `max(atime, ctime, mtime)  + rel \u003e time` is equivalent to `atime + rel \u003e time || ctime + rel \u003e time || mtime + rel \u003e time`, this is the expected behaviour.",
      "parentUuid": "64a029f7_813cb751",
      "range": {
        "startLine": 246,
        "startChar": 11,
        "endLine": 248,
        "endChar": 39
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17e65aeb_5d4b7fbd",
        "filename": "src/parser.c",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-08T10:02:31Z",
      "side": 1,
      "message": "major: how can you differentiate them if they have the same name?",
      "range": {
        "startLine": 52,
        "startChar": 39,
        "endLine": 52,
        "endChar": 46
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c52c2ad_0168e5cb",
        "filename": "src/parser.c",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "They are not supposed to be different, because the user does not know about the existence of these attributes, they do not know that the DB stores a relative and an absolute attribute, so showing the names of these attributes will only confuse the user, and not indicate anything.",
      "parentUuid": "17e65aeb_5d4b7fbd",
      "range": {
        "startLine": 52,
        "startChar": 39,
        "endLine": 52,
        "endChar": 46
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e75a03eb_74d83ba0",
        "filename": "tests/test_expired.bash",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-08T08:12:18Z",
      "side": 1,
      "message": "typo: expired (same below)",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 38
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "842d23d9_1c39a890",
        "filename": "tests/test_expired.bash",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-09T13:01:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e75a03eb_74d83ba0",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 38
      },
      "revId": "518fed6adaee8da249558f354b38593dbd53186f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}